{"version":3,"sources":["speclj/run/standard.cljs"],"mappings":"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","names":["speclj.run.standard/counter","cljs.core.atom","cljs.core/PROTOCOL_SENTINEL","this__5287__auto__","writer__5288__auto__","opt__5289__auto__","cljs.core/-write","speclj.run.standard/StandardRunner","speclj.run.standard/->StandardRunner","num","descriptions","results","this","directories","reporters","js/alert","description","cljs.core.swap_BANG_","cljs.core/conj","run-results","speclj.running/do-description","cljs.core/into","seq__44852","cljs.core/seq","chunk__44853","count__44854","i__44855","temp__5823__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","cljs.core/deref","speclj.running/filter-focused","speclj.reporting/report-runs*","x","writer","opts","cljs.core/-pr-writer","speclj.components/Description","speclj.run.standard/new-standard-runner","cljs.core/inc","cljs.core/reset!","speclj.config/default-runner-fn","speclj.config/default-runner","speclj.run.standard/armed","var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","speclj.run.standard/run-specs","seq44957","self__5712__auto__","configurations","speclj.config/with-config","cljs.core.merge","cljs.core.dissoc","speclj.config/default-config","cljs.core.apply","cljs.core/hash-map","temp__5821__auto__","filter-msg","speclj.tags.describe_filter","speclj.reporting/report-message*","speclj.config/active-reporters","speclj.running/run-and-report","speclj.config/active-runner","speclj.results/fail-count"],"sourcesContent":["(ns speclj.run.standard\n  (:require [speclj.components]\n            [speclj.config :refer [active-reporters active-runner default-config default-runner\n                                   default-runner-fn with-config]]\n            [speclj.report.progress]                        ; so that we can load the default reporter\n            [speclj.reporting :refer [report-message* report-runs*]]\n            [speclj.results :refer [fail-count]]\n            [speclj.running :refer [do-description filter-focused run-and-report run-description]]\n            [speclj.tags :refer [describe-filter]]))\n\n(def counter (atom 0))\n\n(deftype StandardRunner [num descriptions results]\n  speclj.running/Runner\n  (run-directories [this directories reporters]\n    (js/alert \"StandardRunner.run-directories:  I don't know how to do this.\"))\n\n  (submit-description [this description]\n    (swap! descriptions conj description))\n\n  (run-description [this description reporters]\n    (let [run-results (do-description description reporters)]\n      (swap! results into run-results)))\n\n  (run-and-report [this reporters]\n    (doseq [description (filter-focused @descriptions)]\n      (run-description this description reporters))\n    (report-runs* reporters @results)))\n\n(extend-protocol IPrintWithWriter\n  speclj.run.standard.StandardRunner\n  (-pr-writer [x writer opts]\n    (-write writer (str \"#<speclj.run.standard.StandardRunner(num: \" (.-num x) \", descriptions: \"))\n    (-pr-writer @(.-descriptions x) writer opts)\n    (-write writer \")>\"))\n  speclj.components.Description\n  (-pr-writer [x writer opts]\n    (-write writer (str \"#<speclj.component.Description(name: \" (.-name x) \")>\"))))\n\n(defn new-standard-runner []\n  (StandardRunner. (swap! counter inc) (atom []) (atom [])))\n\n(reset! default-runner-fn new-standard-runner)\n(reset! default-runner (new-standard-runner))\n(def armed false)\n\n(defn run-specs [& configurations]\n  \"If evaluated outside the context of a spec run, it will run all the specs that have been evaluated using the default\nrunner and reporter.  A call to this function is typically placed at the end of a spec file so that all the specs\nare evaluated by evaluation the file as a script.  Optional configuration parameters may be passed in:\n\n(run-specs :stacktrace true :color false :reporters [\\\"documentation\\\"])\"\n  (when armed\n    (with-config\n      (merge (dissoc default-config :runner) (apply hash-map configurations))\n      (fn []\n        (if-let [filter-msg (describe-filter)]\n          (report-message* (active-reporters) filter-msg))\n        (run-and-report (active-runner) (active-reporters))\n        (fail-count @(.-results (active-runner)))))))\n"],"x_google_ignoreList":[0]}